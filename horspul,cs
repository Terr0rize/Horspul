//#include <limits.h>
#include <iostream>
#include <string>
//#include <stdio.h>
using namespace std;

// A utility function to get maximum of two integers

int max(int a, int b)
{
    return (a > b) ? a : b;
}

// The preprocessing function for Boyer Moore's bad character heuristic

void badCharHeuristic(char* str, int size, int badchar[256])
{
    
    for (int i = 0; i < 256; i++)
        badchar[i] = -1;
    // Fill the actual value of last occurrence of a character
    for (int i = 0; i < size; i++)
        badchar[str[i]] = i;
}

void search(char* txt, char* pat)
{
    int m = strlen(pat);
    int n = strlen(txt);
    int badchar[256];

    badCharHeuristic(pat, m, badchar);

    int s = 0; // s is shift of the pattern with respect to text

    while (s <= (n - m))
    {
        int j = m - 1;

        while (j >= 0 && pat[j] == txt[s + j])
            j--;
        if (j < 0)
        {
            cout << "\nНайденная позиция: " << s << endl;
            s += (s + m < n) ? m - badchar[txt[s + m]] : 1;
        }

        else
            s += max(1, j - badchar[txt[s + j]]);
    }

}



/* Driver program to test above funtion */

int main()
{
    setlocale(LC_ALL, "rus");
    char txt[] = "chelrlolk";
    char pat[] = "lol";
    search(txt, pat);
    return 0;
}
